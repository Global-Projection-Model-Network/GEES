!variables
    "Real Discount Factor" rdf
    "Private Consumption" ch
    "Private Consumption, Point of Reference" ref_ch
    "Per-Capita Labor Supply" nh
    "Variable Labor" nv
    "Private Investment" ih
    "Production Capital" k
    "Production Capital, Point of Reference" ref_k
    "Production Capital Services" uk
    "Household Net Worth" netw
    "Domestic Technology Level" ar
    "Shadow Value of Household Budget Constraing" vh
    "Price of Private Consumption" pch
    "Price of Private Investment" pih
    "Roundabout Production" z
    "Stage T-2 Output" y3
    "Stage T-1 Output" y1
    "Stage T-0 Output" y
    "Price of Stage T-0 Output" py0
    "Price of State T-1 Output" py1
    "price of Stage T-2 Output" py3
    "Nominal GDP" ngdp

    "Price of Domestic Production" py
    "Price of Production Capital" pk
    "Price of Production Capital Services" puk
    "Nominal Wage Rate" w, w0
    "Nominal Local Currency Money Market Rate" r
    "Nominal Local Currency Household Lending Rate" rbl
    "Bank Deposits" bd
    
    "Price of Final Domestic Output, Rate of Change" roc_py
    "Price of Final Domestic Output, Rate of Change, Point of Reference" ref_roc_py
    "Nominal Wage Rate, Rate of Change" roc_w
    "Price of Consumer Goods, Rate of Change" roc_pch
    "Household Investment, Rate of Change" roc_ih
    "Capital Utilization Rate" u
    "Household Capital, Rate of Change" roc_k

    "Domestic Component of Private Consumption" ych
    "Domestic Component of Government Consumption" ycg
    "Domestic Component of Private Investment" yih


!log-variables
    !all-but


!substitutions

    trn = (pch * ch + pih * ih + kappa_1 * pk * k);
    curr = (w*nh*nf - txl2*pch*ch);
    shf_curr = normpdf((log(pch*ch/($curr$*exp(shk_curr))) - log(xi_ch1))/xi_ch2)/xi_ch2;

    adj_uk = (log(uk/y1)-log(uk{-1}/y1{-1}))-&rdf*(log(uk{+1}/y1{+1})-log(uk/y1));
    adj_y3 = (log(y3/y1)-log(y3{-1}/y1{-1}))-&rdf*(log(y3{+1}/y1{+1})-log(y3/y1));

    adj_ih = log(ih/ih{-1}/&roc_ih) - beta*log(ih{+1}/ih/&roc_ih);
    adj_py = log(roc_py/ref_roc_py) - beta*log(roc_py{+1}/ref_roc_py{+1});


!parameters
    rho_ar

    chi_curr, chi_ch, chi
    nu_0, nu_1
    xi_k, xi_ih
    upsilon_0, upsilon_1
    beta, beta_k, delta, gamma_n0, gamma_n, gamma_uk, gamma_z
    eta, rho_w
    kappa_1, kappa_2
    ss_ar
    ss_roc_pch
    xi_py, mu_py, mu_y3
    rho_r, psi_pch

    zeta_py
    xi_ch0, xi_ch1, xi_ch2

    xi_y1, xi_y3

!shocks
    
    shk_ar
    shk_r
    shk_w
    shk_curr


!equations

%% Household Consumption

    vh*pch*[ ch - chi*ref_ch ] = nn*(1 - chi*&ref_ch/&ch) ...
    !! vh*pch*ch = nn;

    ref_ch = chi_curr*(w*nh*nf/pch) + chi_ch*ch{-1};
    
    vh = beta*vh{+1}*rbl + nu_1*netw;

    rdf = beta*vh{+1}*pch{+1}/(vh*pch);
    

%% Labor Supply

    vh * w0 = 1;

    log(w/pch) ...
        = rho_w * log(w{-1}*&roc_w/pch{-1}/&roc_pch) ... * &roc_w * &roc_pch) ...
        + (1-rho_w) * log(w0/pch) ...
        + shk_w ...
        !! w = w0;

    bd = kappa_2 * $trn$;

%


%% Production Capital Supply

    vh*pk*(1 + xi_k*log(k/ref_k)) ...
        = vh*puk + beta_k*beta*vh{+1}*(1-delta)*pk{+1} ...
        + nu_1*netw*pk;

    ref_k = k{+1}/&roc_k;

    pk = pih*[ 1 + xi_ih*($adj_ih$) ] ...
    !! pk = pih;

    roc_ih = ih/ih{-1};

    k = (1-delta)*k{-1} + ih;

    uk = u * k !! uk = k;
    u = (&py / &puk * puk / py)^upsilon_1 !! u = 1;

%


%% Productivity

    % Area Specific Productivity
    log(ar) = rho_ar*log(ar{-1}) + (1-rho_ar)*log(ss_ar) + shk_ar ...
    !! ar = ss_ar;

%


%% Stage T-3 Production: Labor and Intermediate Imports

    nv = (nh - gamma_n0*&nh) * nf;

    % Stage T-3 production is open/closed specific
    % y3 = ...

%


%% Stage T-2 Production: Variable Inputs and Capital

    y1 = uk^gamma_uk * y3^(1-gamma_uk);

    gamma_uk * py1 * y1 = puk * uk * [1 + xi_y1*($adj_uk$)] ...
    !! gamma_uk * py1 * y1 = puk * uk;

    (1-gamma_uk) * py1 * y1 = py3 * y3 * [1 + xi_y3*($adj_y3$)] ...
    !! (1-gamma_uk) * py1 * y1 = py3 * y3;

%


%% Final Stage Production: Flatter Marginal Cost

    y + z = y1^(1-gamma_z) * (&y1/&z*z)^gamma_z;
    (1-gamma_z) * py0 * (y + z) = py1 * y1;
    gamma_z * py0 * (y + z) = py * z;

%


%% Final Price Setting

    mu_py*py0 = py*[1 + (mu_py-1)*xi_py*($adj_py$)] ...
    !! py = mu_py * py0;

    ref_roc_py = roc_py{-1}^zeta_py * &roc_py^(1-zeta_py);
    
    % Disaggregation of y is open/closed specific
    % y = ...

    pch = py;
    pih = py;

    ch = ych;
    cg = ycg;
    ih = yih;
    
%


%% Monetary Policy

    "Monetary Policy Reaction Function"
    log(r) ...
        = rho_r * log(r{-1}) ...
        + (1-rho_r) * [ log(&r) + psi_pch * (log(roc_pch{+1}) - log(ss_roc_pch)) ] ...
        + shk_r ...
    !! pch = pch{-1} * ss_roc_pch;

%


%% Definitions
    roc_cg = cg / cg{-1};
    roc_w = w / w{-1};
    roc_pch = pch / pch{-1};
    roc_py = py / py{-1};
    roc_k = k/k{-1};

%


%% Definitions outside Model

!postprocessor

    nch_to_ngdp = pch * ch / ngdp;
    nih_to_ngdp = pih * ih / ngdp;
    nkh_to_ngdp = pk * k / ngdp;
    curr_to_ngdp = ($curr$) / ngdp;

%

